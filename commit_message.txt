feat: implement complete child profile editing functionality in Settings

This commit implements a fully functional child profile editing system within the Settings tab, allowing users to modify their child's basic   information through a clean modal interface.

## Key Features Added:

### Child Profile Edit Navigation (Step 3: Connect Edit Navigation)
- Fixed SwiftUI state timing issue that was causing white screen on Edit Profile button tap
- Removed intermediate `editingChild` state variable and simplified sheet presentation
- Edit Profile button now properly opens ChildProfileEditView with current child data

### Complete Child Profile Edit Form
- Created ChildProfileEditView with proper navigation structure (Cancel/Save buttons)
- Implemented form validation ensuring name is required
- Added proper error handling and loading states during save operations
- Integrated with existing AuthService.updateChild() method for database persistence

### Database Integration & State Management
- Connected edit form to AuthService.updateChild() method using Codable struct pattern
- Integrated with AppCoordinator.refreshChildren() to update UI after successful saves
- Ensured proper async/await patterns with MainActor for thread-safe UI updates

### UI/UX Improvements
- Replaced age text input with date picker wheel matching onboarding experience
- Added SettingsDatePicker component with consistent styling (ColorPalette.swift)
- Removed pronouns field to simplify form to essential information only
- Improved birth date calculation from stored age (sets to January 1st of calculated birth year)
- Enhanced age formatting helper in Settings to display "X years old" vs "Not set"

### Technical Implementation Details
- Converts stored age integer to approximate birth date for date picker display
- Calculates age from selected birth date when saving (maintains existing database schema)
- Preserves existing pronouns data in database (passes nil to avoid overwriting)
- Uses sheet presentation with proper dismiss() integration
- Follows established codebase patterns for async operations and error handling

## End-to-End Workflow:
Settings → Child Profile section → Edit Profile button → Modal form → Save → Database update → UI refresh

