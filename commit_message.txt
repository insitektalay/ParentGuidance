fix: resolve microphone button animation persistence after voice transcription
Fix critical UX issue where microphone button continued animating (pulsing, color changing) after voice transcription completed and text was   inserted into input field. The button now properly returns to a static terracotta state after recording workflow completes.
## Problem Solved:
- Microphone button was stuck in infinite animation loop after transcription
- Button exhibited smooth up/down movement and color transitions (terracotta to green)
- Animation persisted even when both isRecording and isTranscribing states were false
- Created confusing user experience suggesting ongoing recording activity
## Root Cause:
SwiftUI's `.repeatForever()` animations were not properly terminating when recording state changed to false. Multiple animation sources (scale   effects, color transitions, glow effects) continued running despite state management working correctly.
## Technical Changes:
### MicButton.swift - Complete Rewrite:
- **Removed all animation state variables** (`pulseScale`, `glowOpacity`)
- **Eliminated `.onChange` handlers** that could trigger residual animations
- **Simplified button structure** to static elements with conditional animation layer
- **Added `.buttonStyle(PlainButtonStyle())`** to disable system button animations
- **Added `.animation(nil)`** to explicitly disable all animations on button
- **Isolated animation effects** to only appear when `isRecording` is true
### SituationInputIdleView.swift:
- **Enhanced combined state logic** (`isRecording || isTranscribing`) for proper button state
- **Added transcription blocking** to prevent button interaction during processing
- **Improved state management** to ensure smooth recording workflow
### VoiceRecorderViewModel:
- **Added timing coordination** to prevent race conditions between recording and transcription states
- **Enhanced debugging** for state transition monitoring
## User Experience Impact:
- âœ… Button now returns to completely static state after transcription
- âœ… No residual animations or color changes
- âœ… Clear visual feedback during recording (red + pulsing) vs idle (terracotta + static)
- âœ… Proper button behavior throughout entire voice recording workflow
- âœ… Consistent UX matching initial button state before recording
## Testing:
- Verified button animation starts correctly when recording begins
- Confirmed button returns to static terracotta state after transcription completes
- Tested multiple recording cycles without animation persistence
- Validated proper state management through console debugging
ðŸŽ¯ Critical UX fix: Voice recording button now behaves predictably
ðŸ›‘ Animation persistence issue resolved
âœ… Clean, professional microphone button interaction

